// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.175.0
//   protoc               v5.27.0
// source: protos/common.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "auth";

export interface CreateCommonDto {
  username: string;
  password: string;
  age: number;
}

export interface Common {
  id: string;
  username: string;
  password: string;
  age: number;
  subscribed: boolean;
}

export const AUTH_PACKAGE_NAME = "auth";

export interface CommonsServiceClient {
  createUser(request: CreateCommonDto): Observable<Common>;
}

export interface CommonsServiceController {
  createUser(request: CreateCommonDto): Promise<Common> | Observable<Common> | Common;
}

export function CommonsServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createUser"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("CommonsService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("CommonsService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const COMMONS_SERVICE_NAME = "CommonsService";
